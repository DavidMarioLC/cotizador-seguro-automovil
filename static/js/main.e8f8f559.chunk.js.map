{"version":3,"sources":["styles.js","components/Form.jsx","helper.js","components/Resumen.jsx","components/Loader/Loader.jsx","App.js","serviceWorker.js","index.js"],"names":["black","ContenedorApp","styled","div","Wrapper","Titulo","h1","Formulario","FormItem","Label","label","Select","select","ContentRadio","ItemRadio","InputRadio","input","Button","button","Error","p","CuadroResumen","TituloResumen","h2","Parrafo","InfoSeguro","strong","Total","Form","guardarResumen","setCargando","useState","marca","ano","plan","datos","guardarDatos","mostrarError","setError","handleChange","e","target","name","value","onSubmit","preventDefault","trim","base","diferenciaAno","Date","getFullYear","obtenerDiferenciaAno","incremento","calcularMarca","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","onChange","type","checked","Resumen","total","Loader","class","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e8f8f559.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nconst yellow = '#ffee02'\r\nconst black = '#0a0a0a'\r\nconst white = '#fff'\r\n\r\nexport const ContenedorApp = styled.div`\r\npadding: 0 1em;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width:400px;\r\n  margin:0 auto;\r\n  \r\n  padding: 1em 0;\r\n  \r\n`;\r\n\r\n\r\nexport const Titulo = styled.h1`\r\n  text-align:center;\r\n  font-family:sans-serif;\r\n  color:${black};\r\n  text-decoration:underline  .2em ${yellow};\r\n  \r\n`;\r\n\r\nexport const Formulario = styled.div`\r\n  width:100%;\r\n  padding:1em 0;\r\n  font-family:sans-serif;\r\n`;\r\n\r\nexport const FormItem = styled.div`\r\n  width:100%;\r\n  display:block;\r\n  margin:1em 0;\r\n\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width:100%;\r\n  display:block;\r\n  margin-bottom:.4em;\r\n  font-family:1rem;\r\n  font-weight:600;\r\n  margin-left:1rem;\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  appearance: none;\r\n\t-webkit-appearance: none;\r\n\t-moz-appearance: none;\r\n  width:100%;\r\n  display:block;\r\n  border:none;\r\n  border:2px solid ${black};\r\n  border-radius:2rem;\r\n  padding:.5rem 1rem;\r\n  \r\n\r\n`;\r\nexport const ContentRadio = styled.div`\r\n  display:flex;\r\n  justify-content:space-around;\r\n`\r\nexport const ItemRadio = styled.div`\r\n\r\n`\r\nexport const InputRadio = styled.input``\r\n\r\n\r\nexport const Button = styled.button`\r\n  width:100%;\r\n  display:block;\r\n  border:none;\r\n  border-radius:2rem;\r\n  font-family:1rem;\r\n  padding:.5rem 0;\r\n  font-weight:bold;\r\n  letter-spacing:.5px;\r\n  background-color:${yellow};\r\n  color:${black};\r\n  &:hover{\r\n    border:3px solid ${yellow};\r\n    background-color:${white};\r\n    \r\n  }`;\r\n\r\n\r\nexport const Error = styled.p`\r\n  color:${black};\r\n  font-weight:bold;\r\n  text-align:center;\r\n  padding:.5em .2em;\r\n  background-color:${yellow};\r\n  font-family:sans-serif;\r\n\r\n`;\r\n\r\nexport const CuadroResumen = styled.div`\r\nborder:3px solid ${yellow};\r\n`\r\n\r\nexport const TituloResumen = styled.h2`\r\n  text-align:center;\r\n  font-family:sans-serif;\r\n  color:${black};\r\n  \r\n`;\r\n\r\nexport const Parrafo = styled.p`\r\n  padding-left:1rem;\r\n  font-family:sans-serif;\r\n`\r\nexport const InfoSeguro = styled.strong`\r\n  color:${black};\r\n  font-family:sans-serif;\r\n  font-weight:600;\r\n  \r\n`;\r\n\r\nexport const Total = styled.h2`\r\n  padding-left:1rem;\r\n  font-family:sans-serif;\r\n`;","import React, { useState } from 'react'\r\nimport { Formulario, FormItem, Label, Select, ContentRadio, ItemRadio, InputRadio, Button, Error } from '../styles'\r\nimport { obtenerDiferenciaAno, calcularMarca, obtenerPlan } from '../helper'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Form = ({ guardarResumen, setCargando }) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        ano: '',\r\n        plan: ''\r\n    })\r\n    const { marca, ano, plan } = datos;\r\n\r\n    const [mostrarError, setError] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault()\r\n        //validar\r\n        if (marca.trim() === '' || ano.trim() === '' || plan.trim() === '') {\r\n            setError(true)\r\n            return;\r\n        }\r\n        setError(false)\r\n        //base 2000\r\n        let base = 2000;\r\n\r\n        //obtener diferencia de  años\r\n        const diferenciaAno = obtenerDiferenciaAno(ano)\r\n\r\n\r\n        //por cada año  hay  que restar el 3%\r\n        base -= ((diferenciaAno * 3) * base) / 100;\r\n\r\n        //americano 15%\r\n        //asiatico 5%\r\n        //Europeo 30%\r\n        base = calcularMarca(marca) * base\r\n\r\n        //basico +20%\r\n\r\n        //completo 50%\r\n        const incremento = obtenerPlan(plan)\r\n        base = parseFloat(incremento * base).toFixed(2)\r\n\r\n        setCargando(true)\r\n\r\n        setTimeout(() => {\r\n            setCargando(false)\r\n            guardarResumen({\r\n                cotizacion: base,\r\n                datos\r\n            })\r\n\r\n        }, 1000);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formulario>\r\n            {mostrarError && <Error>Todos los campos deben ser llenados.</Error>}\r\n            <form onSubmit={cotizarSeguro}>\r\n\r\n                <FormItem>\r\n                    <Label>Marca</Label>\r\n                    <Select name=\"marca\" value={marca} onChange={handleChange}>\r\n                        <option value=\"\">-- Seleccione --</option>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asíatico</option>\r\n                    </Select>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Label>Año</Label>\r\n                    <Select name=\"ano\" value={ano} onChange={handleChange}>\r\n                        <option value=\"\">-- Seleccione --</option>\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2020\">2020</option>\r\n                        <option value=\"2019\">2019</option>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                    </Select>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Label>Plan</Label>\r\n                    <ContentRadio>\r\n                        <ItemRadio>\r\n                            <InputRadio name=\"plan\" type=\"radio\" value=\"basico\" checked={plan === \"basico\"} onChange={handleChange} /> Basico\r\n                        </ItemRadio>\r\n                        <ItemRadio>\r\n                            <InputRadio name=\"plan\" type=\"radio\" value=\"completo\" checked={plan === \"completo\"} onChange={handleChange} /> Completo\r\n                        </ItemRadio>\r\n                    </ContentRadio>\r\n                </FormItem>\r\n                <Button type=\"submit\">Cotizar</Button>\r\n            </form>\r\n        </Formulario>\r\n    )\r\n}\r\nForm.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    setCargando: PropTypes.func.isRequired\r\n}\r\nexport default Form\r\n","// obtiene la diferencia de años\r\nexport const obtenerDiferenciaAno = (ano) => new Date().getFullYear() - ano;\r\n\r\n//calcular el total a pagar\r\nexport const calcularMarca = (marca) => {\r\n    let incremento;\r\n\r\n    switch (marca) {\r\n        case 'americano':\r\n            incremento = 1.15\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05\r\n            break;\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n//calcular tipo de seguro\r\n\r\nexport const obtenerPlan = (plan) => plan === 'basico' ? 1.20 : 1.50;","import React from 'react'\r\nimport { CuadroResumen, TituloResumen, InfoSeguro, Parrafo, Total } from '../styles'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Resumen = ({ datos, total }) => {\r\n    const { marca, ano, plan } = datos;\r\n    if (marca === '' || ano === '' || plan === '') {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <CuadroResumen>\r\n            <TituloResumen>Resumen de cotización:</TituloResumen>\r\n            <Parrafo>Marca: <InfoSeguro>{marca}</InfoSeguro></Parrafo>\r\n            <Parrafo>Plan: <InfoSeguro>{plan}</InfoSeguro></Parrafo>\r\n            <Parrafo>Año del perro: <InfoSeguro>{ano} </InfoSeguro></Parrafo>\r\n            <Total>Total: S/ {total}</Total>\r\n        </CuadroResumen>\r\n    )\r\n}\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired\r\n    , total: PropTypes.number.isRequired\r\n}\r\nexport default Resumen\r\n","import React from 'react'\r\nimport './style.css'\r\nconst Loader = () => {\r\n    return (\r\n        <div class=\"sk-circle\">\r\n            <div class=\"sk-circle1 sk-child\"></div>\r\n            <div class=\"sk-circle2 sk-child\"></div>\r\n            <div class=\"sk-circle3 sk-child\"></div>\r\n            <div class=\"sk-circle4 sk-child\"></div>\r\n            <div class=\"sk-circle5 sk-child\"></div>\r\n            <div class=\"sk-circle6 sk-child\"></div>\r\n            <div class=\"sk-circle7 sk-child\"></div>\r\n            <div class=\"sk-circle8 sk-child\"></div>\r\n            <div class=\"sk-circle9 sk-child\"></div>\r\n            <div class=\"sk-circle10 sk-child\"></div>\r\n            <div class=\"sk-circle11 sk-child\"></div>\r\n            <div class=\"sk-circle12 sk-child\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState } from 'react';\nimport { ContenedorApp, Wrapper, Titulo } from './styles'\nimport Form from './components/Form'\nimport Resumen from './components/Resumen'\nimport Loader from './components/Loader/Loader'\n\n\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({})\n  const { datos, cotizacion } = resumen;\n\n  const [cargando, setCargando] = useState(false)\n\n  return (\n    <ContenedorApp>\n      <Wrapper>\n        <Titulo>Cotizador de seguros</Titulo>\n        <Form guardarResumen={guardarResumen} setCargando={setCargando} />\n        {cargando && <Loader />}\n\n        {datos && <Resumen datos={datos} total={cotizacion} />}\n      </Wrapper>\n    </ContenedorApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}